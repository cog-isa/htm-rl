# ====== Experiment config file =======
# By convention the filename should be prefixed with `expm_`
# The config has two semantic sections:
# 1. Experiment - declaration of all scenarios (=envs and agents) to run
# 2. Scenario - declaration of the _current_ env-agent pair to run

# Additional scenario-specific params are shared between all experiment's scenarios.

# Common usage scenario - specify a broad experiment in *.yml config file and
# explicitly provide the list of envs/agents to run (they act like filters)
# via run arguments.
# When an experiment is set in the config, the scenario section is dynamically
# spawned (=filled) for every experiment's scenario during the run.

# All additional run arguments related to the experiment are placed to the root,
# hence becoming experiment params too.

# specifies experiment's scenarios type
_type_: debug

# ====== Experiment section ======

# Declares environments for an experiment. Options:
# 1. List of env config names.
# 2. Dict of env <name>: <config name>
# 2. Dict of env <name>: <config content dict>
# NB: env names are arbitrary, env config names can be specified w/o `env_` prefix
envs:
  - obs: obs

# Declares agents for the run. Format and options - same as for `envs`.
agents:
  - rnd: rnd
  - ucb: ucb
  - svpn: svpn

# Declares a list of the environment seeds. See `X_seeds` for another way to declare.
env_seeds:
  - 711072
  - 482614
  - 743535

# Declares a list pf agent seeds. See `X_seeds` for another way to declare.
agent_seeds:
  - 42
  - 1337

# Alternative seed list declaration for environments/agents.
# This definition will be dynamically replaced by the generated
# list of seeds for the resulting config.
X_seeds: !generate_seeds
  base: 8713
  n_seeds: 40

# ====== Scenario section ======

# Scenario-specific params shared between all experiment's scenarios.
# Example: debug scenario
n_episodes: 200

# wandb control options
wandb:
  enabled: false
  project: wandb_project_name
  mode: dryrun
  silent: false

# Each scenario has one fixed pair env-agent: agent config, agent seed,
# env config, env seed.
# During the experiment run, these 4 args are sequentially dynamically set.
env_seed:
env:
agent_seed:
agent:
