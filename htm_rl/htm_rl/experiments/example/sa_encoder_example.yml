# ========== SaEncoder config ==========
# Most of the time SaEncoder is specific to the environment
# and its config could be shared between different agents.
# So to decouple setting it and to reduce the size of agent's
# configs, it's moved to the separate file. Your experiment/scenario
# should manually support it (see example in "standard" scenario)

# Spatial Pooler config param names differ from raw htm.core SP
# We wrap SP to give params a bit more intuitive names, see htm_plugins

# By convention attributes that start with "." are considered as
# local to the config auxiliary attributes used to reduce repeating
# They are removed from the dictionary passed to
# the corresponding object's __init__ function (you should do
# it manually, see example in "standard" scenario)
# This "local" attribute contains the common SP params
.default_spatial_pooler_params: &default_spatial_pooler_params
  synapse_permanence_deltas: [ .1, .02 ]
  connected_permanence_threshold: .5
  min_activation_threshold: 2

# Defines state (i.e. env observation) encoder SP: state --> s
state_sp:
  <<: *default_spatial_pooler_params
  output_dilation_ratio: 1.2
  potential_synapses_ratio: .65
  sparsity: .02
  boost_strength: .3
  boost_sliding_window: 1000
  expected_normal_overlap_frequency: .004

# Defines action encoder: int action --> a
action_encoder:
  bucket_size: 4

# Defines sa encoder SP: (s, a) --> sa
sa_sp:
  <<: *default_spatial_pooler_params
  output_dilation_ratio: 2.
  potential_synapses_ratio: .9
  sparsity: .02
  boost_strength: .3
  boost_sliding_window: 2000
  expected_normal_overlap_frequency: .004
