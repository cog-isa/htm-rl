seed: &seed 77
muscles_size: &muscles_size 4
columns_per_area: &columns_per_area 2
cells_per_column: &cells_per_column 3

spatial_pooler_default:
  globalInhibition: True
  numActiveColumnsPerInhArea: *columns_per_area
  localAreaDensity: 0

temporal_memory_default:
  activation_threshold: *columns_per_area
  learning_threshold: *columns_per_area
  activation_inhib_feedback_threshold: *columns_per_area
  learning_inhib_feedback_threshold: *columns_per_area
  activation_inhib_basal_threshold: *columns_per_area
  learning_inhib_basal_threshold: *columns_per_area

  activation_apical_threshold: *columns_per_area
  learning_apical_threshold: *columns_per_area
  activation_exec_threshold: *columns_per_area
  learning_exec_threshold: *columns_per_area

  initial_permanence: 0.4
  connected_threshold: 0.5
  permanence_increment: 0.1
  permanence_decrement: 0.02
  predicted_segment_decrement: 0.001

  max_synapses_per_segment: *columns_per_area
  sample_size: *columns_per_area

  max_inhib_synapses_per_segment: 4
  max_exec_synapses_per_segment: *columns_per_area
  max_apical_synapses_per_segment: *columns_per_area

  sample_inhib_basal_size: *columns_per_area
  sample_inhib_feedback_size: *columns_per_area
  sample_apical_size: *columns_per_area
  sample_exec_size: *columns_per_area

basal_ganglia_default:
  alpha: 0.1
  beta: 0.1
  gamma: 0.01
  discount_factor: 0.95
  w_STN: 0.001
  value_window: 100

block_default:
  pattern_overlap_threshold: 0.9
  gamma: 0.9
  predicted_boost: 0.2

input_block_default: {}

environment:
  shape_xy: [ 4, 4 ]
  seed: *seed

  actions:
    - move right
    - move down
    - move left
    - move up
    - stay

  terminate:
    episode_max_steps: 50
    early_stop: true

  areas:
    n_types: 1

  obstacles:
    density: .25

  food:
    n_items: 1
    reward: 2000.

  action_costs:
    action_cost: -0.01
    action_weight:
      stay: 1.
      turn: .5
      move: 1.

  rendering:
    view_rectangle: [ [ -1, -1 ], [ 1, 1 ] ]
    render:
      - obstacles
    #  - area
      - food
    #  - position
    #      - direction
    bucket_size: 1

input_blocks:
  - level: 0 # state
    columns: 18
  - level: 0 # action
    columns: 8

blocks:
  - block: {level: 1} # state block
    sp:
      inputDimensions: [ 18 ]
      columnDimensions: [ 36 ]
      potentialRadius: 18
    tm:
      apical_columns: 16
      apical_cells_per_column: *cells_per_column
      basal_columns: 36
      basal_cells_per_column: *cells_per_column
      feedback_columns: 72
    bg: null
    bg_sp: null
  - block: {level: 1} # action block
    sp:
      inputDimensions: [ 8 ]
      columnDimensions: [ 16 ]
      potentialRadius: 8
    tm:
      apical_columns: 36
      apical_cells_per_column: *cells_per_column
      basal_columns: 16
      basal_cells_per_column: *cells_per_column
      feedback_columns: 32
    bg:
      input_size: 52
    bg_sp:
      inputDimensions: [ 52 ]
      columnDimensions: [ 104 ]
      potentialRadius: 52

  - block: {level: 2} # state block
    sp:
      inputDimensions: [ 36 ]
      columnDimensions: [ 72 ]
      potentialRadius: 36
    tm:
      apical_columns: 32
      apical_cells_per_column: *cells_per_column
      basal_columns: 72
      basal_cells_per_column: *cells_per_column
      feedback_columns: 0
    bg: null
    bg_sp: null
  - block: {level: 2} # action block
    sp:
      inputDimensions: [ 16 ]
      columnDimensions: [ 32 ]
      potentialRadius: 16
    tm:
      apical_columns: 72
      apical_cells_per_column: *cells_per_column
      basal_columns: 32
      basal_cells_per_column: *cells_per_column
      feedback_columns: 0
    bg:
      input_size: 104
    bg_sp:
      inputDimensions: [ 104 ]
      columnDimensions: [ 208 ]
      potentialRadius: 104

hierarchy:
  input_blocks: [ 0, 1 ]
  output_block: 3
  block_connections: [
    {
      'basal_in': [ ],
      'apical_in': [ ],
      'feedback_in': [ ],
      'basal_out': [ 2 ],
      'apical_out': [ ],
      'feedback_out': [ ]
    },

    {
      'basal_in': [ ],
      'apical_in': [ ],
      'feedback_in': [ ],
      'basal_out': [ 3 ],
      'apical_out': [ ],
      'feedback_out': [ ]
    },

    {
      'basal_in': [ 0 ],
      'apical_in': [ 3 ],
      'feedback_in': [ 4 ],
      'basal_out': [ 4 ],
      'apical_out': [ 3 ],
      'feedback_out': [ ]
    },

    {
      'basal_in': [ 1 ],
      'apical_in': [ 2 ],
      'feedback_in': [ 5 ],
      'basal_out': [ 5 ],
      'apical_out': [ 2 ],
      'feedback_out': [ ]
    },

    {
      'basal_in': [ 2 ],
      'apical_in': [ 5 ],
      'feedback_in': [ ],
      'basal_out': [ ],
      'apical_out': [ 5 ],
      'feedback_out': [ 2 ]
    },

    {
      'basal_in': [ 3 ],
      'apical_in': [ 4 ],
      'feedback_in': [ ],
      'basal_out': [ ],
      'apical_out': [ 4 ],
      'feedback_out': [ 3 ]
    }
  ]
agent:
  state_size: 18
  punish_reward: -0.01
  alpha: 1.0
  action:
    muscles_size: *muscles_size
    n_actions: 5
    noise_tolerance: 0.0
    patterns:
      [
        [ 1, 0, 0, 0 ],
        [ 0, 1, 0, 0 ],
        [ 0, 0, 1, 0 ],
        [ 0, 0, 0, 1 ],
        [ 0, 0, 0, 0 ]
      ]
  muscles:
    input_size: 16
    muscles_size: 8
    activation_threshold: *columns_per_area
    learning_threshold: *columns_per_area
    permanence_increment: 0.1
    permanence_decrement: 0.02
    depolarized_decrement: 0.01
    connected_permanence: 0.5
    initial_permanence: 0.5
    max_synapses_per_segment: *columns_per_area
    sample_size: *columns_per_area
    max_segments_per_cell: 255
    seed: *seed

