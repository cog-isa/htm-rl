verbosity: &verbosity 1

# ============== seed =================
random_seed_setter: !RandomSeedSetter
  seed: &seed 8713

# =========== environment =============
gridworld_map_generator: !GridworldMapGenerator &gridworld_generator
  seed: *seed
  size: 5
  density: .7
  verbosity: *verbosity
  view_radius: 2

.env_dimensions:
  n_states: &n_states 25
  n_actions: &n_actions 4

transfer_learning_experiment_runner: !TransferLearningExperimentRunner2
  env_generator: *gridworld_generator
  n_episodes_all_fixed: 50
  n_initial_states: 1
  n_terminal_states: 1
  n_environments: 1
  verbosity: *verbosity

# agent runners
.base_agent_runner: &base_runner
  env:
  n_episodes:
  max_steps: 40
  agent:
  verbosity: *verbosity

# test run results processing
run_results_processor: !RunResultsProcessor
  env_name: gridworld_5x5_pomdp
  moving_average: 4
  verbosity: *verbosity
  test_dir:                   # leave empty for default behavior - output to the config's dir

# =========== encoder =================
.state_bits_pre: &state_bits_pre 25
.state_bits_post: &state_bits_post 50

.observation_encoder: &observation_encoder !VectorSdrEncoder
  name: state
  n_elements: *state_bits_pre
  n_categories: 2
  default_format: full

.state_spatial_pooler: &state_spatial_pooler !SpatialPooler
  input_size: !property [*observation_encoder, total_bits]
  output_size: *state_bits_post
  potential_synapses_ratio: .8
  sparsity: .2
  synapse_permanence_deltas: [.1, .02]
  connected_permanence_threshold: .5
  boost_strength: 3
  boost_sliding_window: 100
  expected_normal_overlap_frequency: .04
  seed: *seed
  min_activation_threshold: 1

sa_sdr_encoder: &sa_sdr_encoder !SaSdrEncoder
  state_encoder: !RandomSdrEncoderSp
    name: state
    random_encoder: *observation_encoder
    spatial_pooler: *state_spatial_pooler
  action_encoder: !IntSdrEncoder
    name: action
    n_values: *n_actions
    value_bits: 4
    activation_threshold: 3
    default_format: full

.sa_total_bits: &q_sa_total_bits 100
.q_sa_spatial_pooler: &q_sa_spatial_pooler !SpatialPooler
  input_size: 66
  output_size: *q_sa_total_bits
  potential_synapses_ratio: .8
  sparsity: .1
  synapse_permanence_deltas: [ .1, .02 ]
  connected_permanence_threshold: .5
  boost_strength: 3
  boost_sliding_window: 100
  expected_normal_overlap_frequency: .01
  seed: *seed
  min_activation_threshold: 1


# ========== Temporal Memory / Memory ==========
# should be unique for each agent
.base_temporal_memory: &base_tm
  n_columns: !property [*sa_sdr_encoder, total_bits]
  cells_per_column: 1
  initial_permanence: .5
  connected_permanence: .4
  activation_threshold: 18
  learning_threshold: 14
  predictedSegmentDecrement: .0001
  permanenceIncrement: .1
  permanenceDecrement: .03
#  maxNewSynapseCount: !property [*sa_sdr_encoder, value_bits]
#  maxSynapsesPerSegment: !property [*sa_sdr_encoder, value_bits]
  maxNewSynapseCount: 20
  maxSynapsesPerSegment: 23
  maxSegmentsPerCell: 12               # as only 4 actions available
  seed: *seed

.base_agent_memory: &base_agent_memory
  tm:
  encoder: *sa_sdr_encoder
  sdr_formatter: !property [*sa_sdr_encoder, format]
  sa_superposition_formatter: !sa_superposition_formatter
  collect_anomalies: False

# =========== Agents and Runners ==============
.base_htm_agent: &base_htm_agent
  memory:
  planner:
  n_actions: *n_actions

.base_htm_agent_runner: &base_htm_runner
  <<: *base_runner
  pretrain: 0

.base_mcts_planner: &base_mcts_planner
  memory:
  planning_horizon: 1
  n_actions: *n_actions

.base_mcts_actor_critic: &base_mcts_actor_critic
  cells_sdr_size: *state_bits_post
  update_cell_ratio: 1.
  discount_factor: .95
  learning_rate: .99
  seed: *seed
  online: True

agent_runners:
  dqn: !DqnAgentRunner
    <<: *base_runner
    agent: !DqnAgent
      n_states: *n_states
      n_actions: *n_actions
      epsilon: .15
      gamma: .975
      learning_rate: .3e-3
      seed: *seed

  mcts_q_pomdp: !MctsAgentRunner
    <<: *base_htm_runner
    agent: !MctsAgentQ
      n_actions: *n_actions
      planner: !MctsPlannerQ
        n_actions: *n_actions
        planning_horizon: 1
        encoder: *sa_sdr_encoder
        spatial_pooler: *q_sa_spatial_pooler

      mcts_actor_critic: !MctsActorCritic
        <<: *base_mcts_actor_critic
        cells_sdr_size: *q_sa_total_bits
